import{_ as e,c as t,b as p,q as n}from"./chunks/framework.cU4GRv_d.js";const $=JSON.parse('{"title":"交叉口的轨迹规划的一些探索","description":"","frontmatter":{"title":"交叉口的轨迹规划的一些探索","date":"2024-10-23T20:34:45.000Z","tags":"Learn","copyright":true},"headers":[],"relativePath":"posts/交叉口的轨迹规划的一些探索.md","filePath":"posts/交叉口的轨迹规划的一些探索.md","lastUpdated":1740726062000}'),s={name:"posts/交叉口的轨迹规划的一些探索.md"};function i(r,a,l,o,c,d){return p(),t("div",null,a[0]||(a[0]=[n(`<h2 id="交叉口的轨迹规划的一些探索" tabindex="-1">交叉口的轨迹规划的一些探索 <a class="header-anchor" href="#交叉口的轨迹规划的一些探索" aria-label="Permalink to &quot;交叉口的轨迹规划的一些探索&quot;">​</a></h2><h3 id="地图的感知-理解和车辆的定位" tabindex="-1">地图的感知，理解和车辆的定位 <a class="header-anchor" href="#地图的感知-理解和车辆的定位" aria-label="Permalink to &quot;地图的感知，理解和车辆的定位&quot;">​</a></h3><h4 id="frenet坐标系" tabindex="-1">Frenet坐标系 <a class="header-anchor" href="#frenet坐标系" aria-label="Permalink to &quot;Frenet坐标系&quot;">​</a></h4><p>​ 车辆一般沿着车道行驶，车道有曲有直。驾驶人不会根据GPS的坐标直接控制车辆，而是根据车辆和车道的相对位置进行调整。Frenet坐标系提供了一种相对于路径的局部坐标表示。这种表示使得在曲线路径上进行导航和控制更为直观，能够简化计算，尤其在处理车辆或机器人在复杂环境中的运动时，能够有效地处理加速度、速度和方向的变化。将曲线车道通过Frenet坐标系转化为直道后，可以通过一种统一的方式规划车辆在这条车道上的轨迹。</p><p><img src="https://resource-un4.pages.dev/article/image-20241023192511211.png" alt="十字路口的左转车道"></p><p>取其中某一条左转车道</p><p><img src="https://resource-un4.pages.dev/article/99f21b22596e38e627bbfe1d7c12281.png" alt="cartesian下的左转车道"></p><p>化曲为直后。</p><p><img src="https://resource-un4.pages.dev/article/f81974d941ceca5c06d6bff87514dd0.png" alt="Frenent下左转车道"></p><h4 id="地图离散化" tabindex="-1">地图离散化 <a class="header-anchor" href="#地图离散化" aria-label="Permalink to &quot;地图离散化&quot;">​</a></h4><p>对于需要进行避让的车辆（下以控制车辆表示），以其所在的车道道路中心线为参考线建立Frenet坐标系后，对控制车辆前方的道路中线进行离散化采样：</p><h5 id="初次采样" tabindex="-1">初次采样 <a class="header-anchor" href="#初次采样" aria-label="Permalink to &quot;初次采样&quot;">​</a></h5><p><img src="https://resource-un4.pages.dev/article/3f3c068b5c6e4d51aa16c0216d79d62.jpg" alt="初采样"></p><p>将规划的距离加长，但只对远距离的情况进行预测，故少量采样。</p><p>近距离的规划即将要执行控制，因此对近距离的轨迹需要更加细致的采样。</p><p>最终的采样是近多远少，间隔递增的。例如：在控制车辆前方 0.5 1 1.5 2.5 4.5 8.5 14.5 m分别采样。</p><h5 id="再次采样" tabindex="-1">再次采样 <a class="header-anchor" href="#再次采样" aria-label="Permalink to &quot;再次采样&quot;">​</a></h5><p>中线采样后，沿着中线采样点横向扩展，如图：</p><p><img src="https://resource-un4.pages.dev/article/e1f55e54b8338defe6772d47ec9cf1a.jpg" alt="再次采样"></p><h3 id="成本计算" tabindex="-1">成本计算 <a class="header-anchor" href="#成本计算" aria-label="Permalink to &quot;成本计算&quot;">​</a></h3><h5 id="人工势场法" tabindex="-1">人工势场法 <a class="header-anchor" href="#人工势场法" aria-label="Permalink to &quot;人工势场法&quot;">​</a></h5><p>通过人工势场让车辆认识的需要避开什么，需要遵循什么。</p><p><strong>1. 对车辆建立排斥势场：</strong></p><p>对车前后杠建立势场（认为车的前后都是比较危险的位置，让他们的前后势场高）</p><p>这里采用高斯势场函数</p><p>高斯函数在人工势场方法中常用于生成吸引力和排斥力。其数学表达式通常为：</p><p>$$ U(x) = A \\cdot e^{-\\frac{(x - x_0)^2}{2\\sigma^2}} $$</p><ul><li><p>$$ U(x) 是在点 x 处的势能。 $$</p></li><li><p>$$ A 是势能的幅度（影响强度）。 $$</p></li><li><p>$$ x_0 是高斯函数的中心点（目标位置）。 $$</p></li><li><p>$$ \\sigma是标准差，决定了势能的宽度。 $$</p></li></ul><p><strong>伪代码示例</strong></p><div class="language-plaintext vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plaintext</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>function gaussian_potential(x, A, x0, sigma):</span></span>
<span class="line"><span>    exponent = -(x - x0)^2 / (2 * sigma^2)</span></span>
<span class="line"><span>    potential = A * exp(exponent)</span></span>
<span class="line"><span>    return potential</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 使用示例</span></span>
<span class="line"><span>A = 1.0          // 幅度</span></span>
<span class="line"><span>x0 = target_position // 目标位置</span></span>
<span class="line"><span>sigma = 1.0      // 标准差</span></span>
<span class="line"><span></span></span>
<span class="line"><span>for each position in positions:</span></span>
<span class="line"><span>    U = gaussian_potential(position, A, x0, sigma)</span></span>
<span class="line"><span>    // 使用U进行路径规划或控制</span></span></code></pre></div><p><strong>2. 车道中心线吸引势场</strong></p><p>使车辆尽可能沿着车道中心线行驶</p><p><strong>3. 其他车辆移动的势场预测</strong></p><p><img src="https://resource-un4.pages.dev/article/image-20241023202057114.png" alt="车辆势场"></p><h5 id="转向成本" tabindex="-1">转向成本 <a class="header-anchor" href="#转向成本" aria-label="Permalink to &quot;转向成本&quot;">​</a></h5><p>转向尽可能避免急转，对路径前后点之间的转弯角度进行惩罚，禁止超出最大转弯角。角度的计算见后文车辆控制理论。</p><h4 id="车辆控制理论" tabindex="-1">车辆控制理论： <a class="header-anchor" href="#车辆控制理论" aria-label="Permalink to &quot;车辆控制理论：&quot;">​</a></h4><h5 id="pure-pursuit-纯追踪法" tabindex="-1">pure pursuit 纯追踪法： <a class="header-anchor" href="#pure-pursuit-纯追踪法" aria-label="Permalink to &quot;pure pursuit 纯追踪法：&quot;">​</a></h5><blockquote><p>Pure Pursuit方法，顾名思义，纯轨迹跟踪。它是一种基于几何追踪的路径跟随算法，由Craig Coulter于1992年提出。因控制方法较为简单且直接，无须过多考虑车辆的运动学与<a href="https://zhida.zhihu.com/search?content_id=220718048&amp;content_type=Article&amp;match_order=1&amp;q=%E5%8A%A8%E5%8A%9B%E5%AD%A6%E6%A8%A1%E5%9E%8B&amp;zd_token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJ6aGlkYV9zZXJ2ZXIiLCJleHAiOjE3Mjk4NTc1ODAsInEiOiLliqjlipvlrabmqKHlnosiLCJ6aGlkYV9zb3VyY2UiOiJlbnRpdHkiLCJjb250ZW50X2lkIjoyMjA3MTgwNDgsImNvbnRlbnRfdHlwZSI6IkFydGljbGUiLCJtYXRjaF9vcmRlciI6MSwiemRfdG9rZW4iOm51bGx9.G7NdYXCtfJPEQC7vd8IHNRcFk56lqAXPdyc3JqeTu_E&amp;zhida_source=entity" target="_blank" rel="noreferrer">动力学模型</a>，且调节参数少，可适用于自动驾驶车辆或移动机器人中。</p></blockquote><p>Pure Pursuit算法的基本思想是：参考人类驾驶的行为，通过计算车辆当前位置到预瞄点（goal point）的曲率，使车辆沿着经过预瞄点的圆弧行驶，从而实现轨迹跟踪(如图1)。因此，该算法的核心在于通过设计合理的<a href="https://zhida.zhihu.com/search?content_id=220718048&amp;content_type=Article&amp;match_order=1&amp;q=%E9%A2%84%E7%9E%84%E8%B7%9D%E7%A6%BB&amp;zd_token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJ6aGlkYV9zZXJ2ZXIiLCJleHAiOjE3Mjk4NTc1ODAsInEiOiLpooTnnoTot53nprsiLCJ6aGlkYV9zb3VyY2UiOiJlbnRpdHkiLCJjb250ZW50X2lkIjoyMjA3MTgwNDgsImNvbnRlbnRfdHlwZSI6IkFydGljbGUiLCJtYXRjaF9vcmRlciI6MSwiemRfdG9rZW4iOm51bGx9.51r_le0proaKahq_6TbVF2LVzqVUMunQzRrYOCQX8nM&amp;zhida_source=entity" target="_blank" rel="noreferrer">预瞄距离</a>，从而计算出轨迹跟踪的控制曲率。</p><p><img src="https://resource-un4.pages.dev/article/image-20241023203621670.png" alt="fig1"></p><ol><li><p><strong>预瞄距离计算</strong> (Lookahead Distance, $ L_d $)： $$ L_d = \\sqrt{(x_g - x_v)^2 + (y_g - y_v)^2} $$ 其中，$ (x_v, y_v) $ 是车辆当前的位置，$ (x_g, y_g) $ 是预瞄点的坐标。</p></li><li><p><strong>目标角度</strong> ($\\alpha$) 的计算： $$ \\alpha = \\arctan\\left(\\frac{y_g - y_v}{x_g - x_v}\\right) - \\theta_v $$ 其中，$ \\theta_v $ 是车辆当前的朝向角。</p></li><li><p><strong>轨迹曲率</strong> ($ \\kappa $) 与转向角 ($ \\delta $) 的关系： $$ \\delta = \\arctan\\left(\\frac{L \\cdot \\kappa}{L_d}\\right) $$ 由于 $ \\kappa = \\frac{1}{R} $，其中 $ R $ 是车辆转向时的曲率半径，我们可以得到： $$ \\delta = \\arctan\\left(\\frac{2L \\sin(\\alpha)}{L_d}\\right) $$ 这里，$ L $ 是车辆的轴距。</p></li><li><p><strong>预瞄距离的动态调整</strong>： 预瞄距离 $ L_d $ 可以是一个固定值，也可以随着车辆速度变化动态调整。一种常见的方法是将预瞄距离表示为车辆纵向速度的线性函数： $$ L_d = k_v \\cdot v + l_0 $$ 其中，$ k_v $ 是速度比例因子，$ v $ 是车辆的速度，$ l_0 $ 是最小预瞄距离。</p></li><li><p><strong>方向盘转角的计算</strong></p></li><li><p>阿克曼转向几何关系： $$ \\tan(\\delta) = \\frac{L}{R} $$ 其中，δ 是前轮转角，$ L $ 是车辆轴距，$ R $ 是车辆转向时的曲率半径。</p></li><li><p>方向盘转角输入量 $ \\text{steering} $ 与跟踪曲率 $ K $ 之间的关系： $$ \\text{steering} = K \\cdot \\tan^{-1}\\left(\\frac{L}{R}\\right) $$</p></li><li><p>方向盘角度、横向误差以及预瞄距离之间的关系： $$ \\text{steering} = K \\cdot \\tan^{-1}\\left(\\frac{2L \\sin(\\alpha)}{L_d}\\right) $$ 其中，$ K $ 是车辆转向传动比，$α$ 是目标角度，$ L_d $ 是预瞄距离。</p></li></ol><h3 id="a-算法进行路径规划" tabindex="-1">A* 算法进行路径规划 <a class="header-anchor" href="#a-算法进行路径规划" aria-label="Permalink to &quot;A* 算法进行路径规划&quot;">​</a></h3><p>​ 经过上述操作后，可以开始对单辆车进行轨迹规划了。</p><ol><li>将所有的采样点进行排列组合，得到所有能够机械上允许的路径。从路径中选取成本最低的路径进行碰撞判断。</li></ol><p>​ 这其实是自动驾驶汽车巡航的经典算法——Lattice规划 采用的方式。但这个算法效率不足。</p><ol start="2"><li>使用传统的最短路算法Dijkstra</li><li>使用A*算法，以到达道路尽头（s 增大）为启发，成本函数由 势场成本 + 行动成本（包括打方向盘的角度等）构成。</li></ol><p>显而易见的是，1方法虽然精度高，但显然效率不足，Dijkstra方法效率依旧不如A*。下图是Dijkstra算法和A*算法效率比较：</p><p><strong>无障碍物</strong></p><p><img src="https://resource-un4.pages.dev/article/d7c90df607841d59a48b5672c5c1508a.gif" alt="nobarrier"></p><p><strong>有障碍物</strong></p><p><img src="https://resource-un4.pages.dev/article/b383d524eb518bab0c1f0a14dc1ce1f5_4.gif" alt="barrier"></p>`,52)]))}const g=e(s,[["render",i]]);export{$ as __pageData,g as default};
